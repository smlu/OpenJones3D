# v0.3
General:
  - Fixed various bugs
  - Fixed hiding console on cutscene start (27ca92b)
  - Implemented:
    * `sithConsole` (7879d45)
    * `sithCommand` (4ec4941)

Display & Render:
  - Added support for display resolutions higher than 2048-pixel (6f9db7e)
  - Fixed bug rendering ceiling sky (6f9db7e)

Game play:
  - Fixed submersion of dead thing in cold-water/lava (18d828d)

# v0.2
General:
  - Fixed various bugs
  - Fixed floating point precision bug in `rdVector` & `rdMatrix34` functions (3b800ad)
  - Made OpenJones3D binaries portable by adding absolute resource dir path to JonesFile VFS (fca6ef2)
    This change allows binaries to be placed in any arbitrary location, eliminating the requirement for a Resource folder.
  - Fixed typo in framerate output text (47537aa)
  - Fixed initializing and clearing resource array on `JonesFile_Close` (47537aa)
  - Fixed the invocation of `jonesString_GetString("JONES_STR_LOADERROR")` on every call to `JonesMain_ProcessGamesaveState` when there is no load error or the game is not being restored (47537aa)
  - Fixed error text when it was cached by `jonesString_GetString` in call to `JonesMain_LogErrorToFile` (485d553)
  - Changed the location of `JonesError.txt` to be always written in current working directory instead of installed path (485d553)  
    This change resolves a potential fatal error that could occur when writing the error log due to the registry system failing to startup.
  - Changed warning log to output to console or file (dcd3015)
  - Made console log output colorized (dcd3015)
  - Added debugger log output (dcd3015)
  - Removed material buffer size constraint when loading material section form NDY level file in `sithMaterial_LoadMaterialsText` (dcd3015) 
  - Fixed potential infinitive loop bug when .uni file is missing line break at the end of file (6b71793)
  - Implemented `sithSurface` module (b448041)

Display & Render:
  - Fixed scaling of color component when converting pixel data row in `stdColor_ColorConvertOneRow` (9e6ba77)
  - Changed default engine texture format to 32 bit from 16 bit (249a416)
  - Removed support for 16 bpp textures (3152496)
  - Increased `rdCache` vertex buffer size to 32768 * 64 (25ceaba)
  - Increased `rdModel3` (.3DO) mesh constraints based on `rdCache` constraints (a008386)
  - Increased max no. of sectors in camera view to 4096 (b448041)
  - Increased max no. of thing with sectors to 8192 (b448041)

Game play:
  - Changed to by default play the higher resolution intro movie (800x600) (ffa2e9d)
  - Fixed retrieving model by index number when loading savegame (669904d)
    This change adds temporary wrapper function `sithModel_GetModelByIndexWrap`.
  - Added support for 24/32 bit textures to CND cnd file format  (91d0a87)
  - Changed how developer dialog discovers level files (30630d1)
    Now dialog first looks for ndy folder in current working directory, and if found searches for level files in that folder. If ndy folder is not found the dialog checks for level files in `Install Path\Resource\ndy`.
  - Fixed searching for ndy level file when corresponding cnd file is not found (5e64e5b)
    When game progresses to the next level this enables using ndy file for original levels when the corresponding cnd file is not found 

HUD:
  - Fixed drawing of horizontal wall line (8046835)

# v0.1
General:
  - Fixed minor bugs
  - Improve game loading times by disabling VSync and blt frame buffers instead of flip.
  - Changed DPI awareness to per monitor aware v2
  - Added check for NAN value of provided angle in `stdMath_SinCos`
  - Fixed issue with float precision in `stdMath_NormalizeAngle` which could result in angles larger than 360 degrees.
    This fixes array out of bound read in `stdMath_SinCos`, which fixes random crash when opening inventory menu or calling COG function `JonesInvItemChanged` from script.
  - Fixed deleting hdc on pixel data read error in `stdBmp_Load`
  - Fixed reading/writing 24 bpp pixel from bytes in `stdColor_ColorConvertOneRow`.
    This fixes conversion of 24bit RGB image.
  - Fixed exit code (0) when app successfully exits
  - Fixed infinitive loop when call to `wkernel_pfProcess` returned value other than -1, 0 or 1 (`wkernel_Run`)
  - Fixed copying full pixel data row from source mipmap in `std3D_AllocSystemTexture`. Originally was fixed to 16 bpp row.
  - (`JonesFile`) Fixed path buffer size to 128 chars, was 48 chars
  - (`JonesFile`) Fixed writing to file by using correct file write function in `JonesFile_FilePrintf`
  - Added bounds check for number of animating joints when loading keyframe from *.key file
  - Fixed a bug in sound compression where clipping of the audio waveform occurred
  - Fixed infinitive loop bug when voice subtitle contains too long word (`sithVoice_AddSubtitle`)

  - Fixed accessing null pointer in `sithWhip_Reset` when `sithCamera` is already closed.
    Fixed checking for null `sithWeapon_SendMessageAim` before calling function`sithWeapon_IsLocalPlayerUnableToUseWeapon` in `sithWeapon_SendMessageAim` functions.
    This 2 fixes solve the game crash when player is aiming with whip and exits the game/program
    at the same time.

  - Fixed game crash when player aims with the whip and exits the game simultaneously by:
    - Addressing a null pointer access in `sithWhip_Reset` when `sithCamera` is already closed.
    - Adding a null check for `sithWeapon_SendMessageAim` before calling `sithWeapon_IsLocalPlayerUnableToUseWeapon`.
    - Added high poly checkbox option to developer dialog (`High poly objects`)
    - Added high poly checkbox option to gameplay options (`High poly objects`)

Game play:
- Fixed the direction of fired projectiles for 2-hand-held weapons by setting the initial direction. This should resolve the issue of random crashes when firing the weapon, as the projectile will now be correctly aimed at the target.
- Fixed damaging player when game runs at > 40 FPS and Taklit's part, Azerim's part or tool from beyond runs out of energy (`sithPlayer_Update`)
- Fixed rendering file list in load game dialog
- Fixed DPI scaling of dialogs
- Fixed bug where controls could become unresponsive when climbing down a whip and pressing the jump-off key simultaneously.
- Enabled HD 3D models by default

Display & Render:
  - Added "simulated" VSync in window mode
  - Added resolution cap to HD resolutions since Direct3D3 doesn't support higher resolutions
  - Fixed raster to use correct vertices buffer when in vertex only mode
  - Fixed clearing raster vertex buffer on startup
  - Added option to disable VSync in `stdDisplay_Update`
  - Fixed rendering of sprite when fog is globally disabled
  - Fixed rendering of polyline when fog is globally disabled
  - Fixed projecting Z coordinate when camera aspect ratio != 1.0
    In addition, this resolves rendering of ceiling sky when aspect ratio != 1.0
  - Fixed screen space projection by correctly applying camera aspect ratio
  - Fixed restoring backbuffer when surface is lost on surface lock
  - Removed hardcoded 16 BPP resolution limitation; the game now defaults to the resolution stored in settings.
  - Removed hardcoded 16 BPP startup resolution limitation when initializing developer dialog allowing for the resolution stored in settings to be selected by default.
  - Set 32 BPP resolution as default
  - Fixed using 32 BPP resolution stored in settings

HUD:
  - (`JonesDialog`) Fixed rendering game background when system dialog box is open
  - Removed help menu option
  - Fixed inventory menu position for wide screen resolutions
  - Fixed inventory menu scaling when aspect ratio is other than 4:3
  - Fixed inventory changed animation position and scaling when aspect ratio is other than 4:3
  - Fixed scaling of HUD health & endurance indicators for screen resolutions other than 4:3
  - Fixed possible menu close lock and game freeze due to uninitialized icon translation move rate.
  - Fixed start icon transition when closing menu.
    Properly initialized move rate for the first transitioning icon, preventing its immediate disappearance.
  - Fixed bug in inventory item change render function (`JonesHud_RenderInventoryItemChange`) which used
    an unbounded yaw value (yaw > 360Â°) in the calculation of the item's yaw angle. This could lead to
    an infinite loop and prevent the menu from opening.
  - Fixed rotation bug for selected inventory item (`JonesHud_UpdateItem`).
    The yaw added to delta yaw was not bounded to 360 degrees, which could lead to incorrect rotation of the item.
  - Fixed rendering end credits on different screen resolutions
  - Fixed fadeout of credits theme music
  - Increased credits fadeout to 2 sec
